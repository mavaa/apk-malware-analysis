import csv
import gzip
import os
import requests
import sqlite3

# Convert the androzoo csv db to sqlite for easier querying
def androzoo_csv_to_sqlite(in_path, out_path):
    create_app_table(out_path)

    con = sqlite3.Connection(out_path)
    cur = con.cursor()

    f = gzip.open(in_path, 'rt')
    csv_reader = csv.reader(f, delimiter=',')

    for line in csv_reader:
        if line[0] == 'sha256':
            print("header")
            print(line)
        elif ',snaggamea' in line:
            print(line)
        else:
            # print(line)
            cur.execute('INSERT INTO apps VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)', line)

    cur.close()
    con.commit()
    con.close()
    f.close()

def create_app_table(db_path):
    if os.path.exists(db_path):
        os.remove(db_path)

    con = sqlite3.Connection(db_path)
    cur = con.cursor()
    cur.execute('CREATE TABLE "apps" (' +
            '"sha256" varchar(64),' +
            '"sha1" varchar(40),' +
            '"md5" varchar(32),' +
            '"dex_date" datetime,' +
            '"apk_size" int,' +
            '"pkg_name" varchar(50),' +
            '"vercode" int,' +
            '"vt_detection" int2,' +
            '"vt_scan_date" datetime,' +
            '"dex_size" int,' +
            '"markets" varchar(40)' +
            ');')

    cur.close()
    con.commit()
    con.close()

# Query the databasse for N amount of random apps
def get_random_apps(db_path, mode, num_apps):
    con = sqlite3.Connection(db_path)
    cur = con.cursor()

    query="select * from apps"

    if mode == 'm':
        print("Getting malware apps")
        query+=" where vt_detection > 10 and"
    elif mode == 'c':
        print("Getting clean apps")
        query+=" where vt_detection = 0 and"
    else:
        mode='b'
        print("Getting all types of apps")
        query+=" where"

    query+=" vt_detection != '' order by random() limit " + str(num_apps) + ";"

    print(query)

    return cur.execute(query).fetchall()

# Download a list of apps to the given path
def download_apps(apps, api_key, out_path):
    base_url="https://androzoo.uni.lu/api/download?apikey=" + api_key + "&sha256="

    if not os.path.exists(out_path):
        os.makedirs(out_path)

    count=1
    for app in apps:
        downloaded = False
        while not downloaded:
            try:
                filename=app[5] + ".apk"
                print("Downloading[" + str(count) + os.sep + str(len(apps)) + "] " + filename + "...", end='', flush=True)
                file=requests.get(base_url + app[0])
                open(out_path + os.sep + filename, "wb").write(file.content)
                print(" Done!")
                print("Sha256sum: " + app[0])
                print("")
                count+=1
                downloaded = True
            except ConnectionResetError:
                print("Connection reset, trying again")
            except requests.exceptions.ConnectionError:
                print("Connection error, trying that again too..")

    print("Downloads completed! Saved to: " + out_path)

# Print info about the given apps
def print_apps(apps):
    for app in apps:
        print("App name: " + app[0])
        print("Sha256sum: " + app[1])
        print("")
