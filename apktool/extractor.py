import subprocess
import os
import xml.etree.ElementTree as ET
import re

android_ns = "{http://schemas.android.com/apk/res/android}"
name_attr = "{0}name".format(android_ns)

def extract_app(app_path, out_path, apktool_path = None):
    if apktool_path == None:
        apktool_path = "apktool"

    if os.path.exists(out_path):
        os.remove(out_path)

    subprocess.run([apktool_path, "d", "-o", out_path, app_path])

def load_manifest(app_path):
    tree = ET.parse(app_path + "/AndroidManifest.xml")
    return tree.getroot()

def get_number_of_activities(manifest):
    number_of_activities = len(manifest.findall("./application/activity"))

    return number_of_activities

def get_permissions(manifest):
    permissions = []

    for permission in manifest.findall("./uses-permission"):
        permissions.append(permission.get(name_attr).split(".")[-1])

    return permissions

def get_ip_files(path):
    matches = []

    files_in_dir = os.listdir(path)

    for file in os.listdir(path):
        filepath = path + os.sep + file
        if os.path.isfile(filepath):
            # Do search in file

            # First run strings command to gen all strings in file
            result = subprocess.run(["strings", filepath], text = True, capture_output = True)

            # Then check for IP addresses
            if string_has_ipv4(result.stdout):
                matches.append(filepath)
        else:
            # Serch recursively in folders
            matches = matches + get_ip_files(filepath)

    return matches

def string_has_ipv4(s):
    ip = re.findall( r'[0-9]+(?:\.[0-9]+){3}', s )

    return len(ip) > 0

