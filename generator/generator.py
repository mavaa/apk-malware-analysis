import csv
import os

bad_permissions = [
    "ACCESS_COARSE_DATA",
    "ACCESS_COARSE_LOCATION",
    "ACCESS_FINE_LOCATION",
    "ACCESS_MOCK_LOCATION",
    "BATTERY_STATS",
    "BLUETOOTH",
    "BLUETOOTH_ADMIN",
    "CALL_PHONE",
    "CAMERA",
    "CHANGE_WIFI_STATE",
    "DISABLE_KEYGUARD",
    "GET_TASKS",
    "INTERNET",
    "MANAGE_ACCOUNTS",
    "NFC",
    "PROCESS_OUTGOING_CALLS",
    "READ_CALENDAR",
    "READ_CONTACTS",
    "READ_EXTERNAL_STORAGE",
    "READ_HISTORY_BOOKMARKS",
    "READ_PHONE_STATE",
    "READ_SMS",
    "RECEIVE_SMS",
    "RECORD_AUDIO",
    "SEND_SMS",
    "SYSTEM_ALERT_WINDOW",
    "WRITE_CONTACTS",
    "WRITE_EXTERNAL_STORAGE",
    "WRITE_HISTORY_BOOKMARKS",
    "WRITE_SMS",
]

def add_csv_line(app_path, extracted_path, csv_path, app_permissions, num_activities, num_ips, num_domains, num_files, country_dial, sdk_version_minimum, sdk_version_target, size_bytes, sha256_hash, malware_label):

    with open(csv_path, "a", newline="") as file:
        # csv_out = csv.writer(file, delimiter=",", quotechar="", quoting=csv.QUOTE_MINIMAL) # Is quoting needed?
        csv_out = csv.writer(file, delimiter=",", quoting=csv.QUOTE_NONE)

        # If file is empty -> write header row
        if os.stat(csv_path).st_size == 0:
            csv_line = ['permission_ACCESS_COARSE_DATA','permission_ACCESS_COARSE_LOCATION','permission_ACCESS_FINE_LOCATION','permission_ACCESS_MOCK_LOCATION','permission_BATTERY_STATS','permission_BLUETOOTH','permission_BLUETOOTH_ADMIN','permission_CALL_PHONE','permission_CAMERA','permission_CHANGE_WIFI_STATE','permission_DISABLE_KEYGUARD','permission_GET_TASKS','permission_INTERNET','permission_MANAGE_ACCOUNTS','permission_NFC','permission_PROCESS_OUTGOING_CALLS','permission_READ_CALENDAR','permission_READ_CONTACTS','permission_READ_EXTERNAL_STORAGE','permission_READ_HISTORY_BOOKMARKS','permission_READ_PHONE_STATE','permission_READ_SMS','permission_RECEIVE_SMS','permission_RECORD_AUDIO','permission_SEND_SMS','permission_SYSTEM_ALERT_WINDOW','permission_WRITE_CONTACTS','permission_WRITE_EXTERNAL_STORAGE','permission_WRITE_HISTORY_BOOKMARKS','permission_WRITE_SMS','num_PERMISSIONS','num_ACTIVITIES','num_IP_ADDRESSES','num_DOMAINS','num_CONTAINED_FILES','certificate_COUNTRY_DIAL_CODE','sdk_VERSION_MINIMUM','sdk_VERSION_TARGET','app_SIZE_BYTES','app_sha256','malware_FAMILY']#,'malware_TARGET']
            csv_out.writerow(csv_line)

        csv_line = []

        # Permissions
        for permission in bad_permissions:
            csv_line.append(1 if permission in app_permissions else 0)

        # Num permissions
        csv_line.append(len(app_permissions))

        # Num activities
        csv_line.append(num_activities)

        # Number of ips found
        csv_line.append(num_ips)

        # Number of domains found
        csv_line.append(num_domains)

        # Number of contained files
        csv_line.append(num_files)

        # Country dial code
        csv_line.append(country_dial)

        # Minimum sdk version
        csv_line.append(sdk_version_minimum)

        # Target sdk version
        csv_line.append(sdk_version_target)

        # File size bytes
        csv_line.append(size_bytes)

        # App sha256
        csv_line.append(sha256_hash)

        # Malware label
        csv_line.append(malware_label)

        # TODO: Fix malware family
        # csv_line.append(0)

        csv_out.writerow(csv_line)
